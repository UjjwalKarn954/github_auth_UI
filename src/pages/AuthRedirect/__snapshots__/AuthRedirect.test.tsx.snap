// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthRedirect should display alert 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 2rem;
  position: fixed;
  z-index: 1001;
  top: 0;
  right: 0;
}

.c0 > * + * {
  margin-top: 2rem;
}

.c1 {
  background-color: #eff2f4;
  overflow: auto;
  padding-top: 32px;
}

.c2 {
  font-size: 56px;
}

.c2 * {
  fill: #126AFA;
}

@media (max-width:1279px) {
  .c1 {
    padding-left: 24px;
    padding-right: 24px;
  }
}

@media (min-width:1280px) {
  .c1 {
    padding-left: calc(24px + (((100vw - 1280px) / 160) * 16));
    padding-right: calc(24px + (((100vw - 1280px) / 160) * 16));
  }
}

@media (min-width:1440px) {
  .c1 {
    padding-left: 40px;
    padding-right: 40px;
  }
}

<div>
  <div
    class="c0"
  />
  <main
    class="c1"
  >
    <svg
      class="c2"
      height="0.5em"
      viewBox="0 0 100 100"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="-.2em"
        cy="50"
        r=".25em"
      >
        <animate
          attributeName="opacity"
          begin=".1"
          dur="1.5s"
          repeatCount="indefinite"
          values="0;1;0"
        />
      </circle>
      <circle
        cx=".5em"
        cy="50"
        r=".25em"
      >
        <animate
          attributeName="opacity"
          begin=".2"
          dur="1.5s"
          repeatCount="indefinite"
          values="0;1;0"
        />
      </circle>
      <circle
        cx="1.2em"
        cy="50"
        r=".25em"
      >
        <animate
          attributeName="opacity"
          begin=".3"
          dur="1.5s"
          repeatCount="indefinite"
          values="0;1;0"
        />
      </circle>
    </svg>
  </main>
</div>
`;

exports[`AuthRedirect should render properly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 2rem;
  position: fixed;
  z-index: 1001;
  top: 0;
  right: 0;
}

.c0 > * + * {
  margin-top: 2rem;
}

.c1 {
  background-color: #eff2f4;
  overflow: auto;
  padding-top: 32px;
}

.c2 {
  font-size: 56px;
}

.c2 * {
  fill: #126AFA;
}

@media (max-width:1279px) {
  .c1 {
    padding-left: 24px;
    padding-right: 24px;
  }
}

@media (min-width:1280px) {
  .c1 {
    padding-left: calc(24px + (((100vw - 1280px) / 160) * 16));
    padding-right: calc(24px + (((100vw - 1280px) / 160) * 16));
  }
}

@media (min-width:1440px) {
  .c1 {
    padding-left: 40px;
    padding-right: 40px;
  }
}

<div>
  <div
    class="c0"
  />
  <main
    class="c1"
  >
    <svg
      class="c2"
      height="0.5em"
      viewBox="0 0 100 100"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="-.2em"
        cy="50"
        r=".25em"
      >
        <animate
          attributeName="opacity"
          begin=".1"
          dur="1.5s"
          repeatCount="indefinite"
          values="0;1;0"
        />
      </circle>
      <circle
        cx=".5em"
        cy="50"
        r=".25em"
      >
        <animate
          attributeName="opacity"
          begin=".2"
          dur="1.5s"
          repeatCount="indefinite"
          values="0;1;0"
        />
      </circle>
      <circle
        cx="1.2em"
        cy="50"
        r=".25em"
      >
        <animate
          attributeName="opacity"
          begin=".3"
          dur="1.5s"
          repeatCount="indefinite"
          values="0;1;0"
        />
      </circle>
    </svg>
  </main>
</div>
`;
